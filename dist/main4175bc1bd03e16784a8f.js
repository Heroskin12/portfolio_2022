(()=>{"use strict";var n={360:(n,e,t)=>{t.d(e,{Z:()=>i});var A=t(537),r=t.n(A),a=t(645),o=t.n(a)()(r());o.push([n.id,"@media screen and (max-width:1650px) {\n    #hero .image {\n        display: none;\n    }\n\n    #hero {\n        justify-content: start;\n    }\n}\n\n@media screen and (max-width:1250px) {\n    #hero {\n        max-width: 100%;\n        padding-left: 5%;\n    }    \n}\n\n@media screen and (max-width:750px) {\n    #hero .text p  {\n        margin: 0 0 40px 4px;\n    }\n\n    .marquee {\n        width: 30rem;\n        padding-right: 0;\n    }\n\n    .marquee-content {\n        gap: 10rem;\n    }\n\n    @keyframes scrolling {\n        0% {transform: translateX(28rem);}\n        100% {transform: translateX(-105%);}\n    }\n}\n","",{version:3,sources:["webpack://./src/mobile.css"],names:[],mappings:"AAAA;IACI;QACI,aAAa;IACjB;;IAEA;QACI,sBAAsB;IAC1B;AACJ;;AAEA;IACI;QACI,eAAe;QACf,gBAAgB;IACpB;AACJ;;AAEA;IACI;QACI,oBAAoB;IACxB;;IAEA;QACI,YAAY;QACZ,gBAAgB;IACpB;;IAEA;QACI,UAAU;IACd;;IAEA;QACI,IAAI,4BAA4B,CAAC;QACjC,MAAM,4BAA4B,CAAC;IACvC;AACJ",sourcesContent:["@media screen and (max-width:1650px) {\n    #hero .image {\n        display: none;\n    }\n\n    #hero {\n        justify-content: start;\n    }\n}\n\n@media screen and (max-width:1250px) {\n    #hero {\n        max-width: 100%;\n        padding-left: 5%;\n    }    \n}\n\n@media screen and (max-width:750px) {\n    #hero .text p  {\n        margin: 0 0 40px 4px;\n    }\n\n    .marquee {\n        width: 30rem;\n        padding-right: 0;\n    }\n\n    .marquee-content {\n        gap: 10rem;\n    }\n\n    @keyframes scrolling {\n        0% {transform: translateX(28rem);}\n        100% {transform: translateX(-105%);}\n    }\n}\n"],sourceRoot:""}]);const i=o},426:(n,e,t)=>{t.d(e,{Z:()=>m});var A=t(537),r=t.n(A),a=t(645),o=t.n(a),i=t(667),s=t.n(i),l=new URL(t(866),t.b),c=new URL(t(493),t.b),p=o()(r()),d=s()(l),f=s()(c);p.push([n.id,"@font-face {\n    font-family: 'calibre';\n    src: url("+d+") format('woff');\n    font-weight: 600;\n    font-style: normal;\n  }\n\n@font-face {\n    font-family: 'sfmono';\n    src: url("+f+") format('woff');\n    font-weight: 400;\n    font-style: normal;\n}\n\n/* Default Configuration */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nh1, h2, h3 {\n    font-family: 'calibre', sans-serif;\n}\n\np, li {\n    font-family: 'sfmono', sans-serif;\n}\n\na {\n    text-decoration: none;\n    font-family: 'sfmono', sans-serif;\n}\n\n/* Utility Classes */\n.pointer:hover {\n    cursor: pointer;\n}\n\n.bg-dark {\n    background-color: #0a192f;\n}\n\n.highlight {\n    color: #52d4b9;\n}\n\n.feature-text, a {\n    color: #ccd6f6;\n}\n\n.sub-text {\n    color: #8892b0;\n}\n\n.p1 {\n    padding: 10px;\n}\n\n.p2 {\n    padding: 20px;\n}\n\n/* Nav CSS */\n\nnav {\n    padding: 20px 50px;\n}\n\n.nav-grid-container {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    background: #0b1930;\n}\n\n.logo {\n    display: flex;\n    justify-content: start;\n    align-items: center;\n    \n}\n\n.logo img {\n    height: 50px;\n}\n\n.nav-links {\n    display: flex;\n    justify-content: flex-end;\n}\n\n.nav-links ul {\n    display: flex;\n    list-style-type: none;    \n    align-items: center;\n    \n}\n\n.nav-links ul li span {\n    color: #52d4b9;\n    margin-right: 5px;\n}\n\n.nav-links ul li {\n    display: flex;\n    padding-right: 40px;\n}\n\n.nav-links ul li:hover {\n    text-decoration: underline;\n}\n\n/* Body */\n\n\n#hero {\n    padding: 0 20px;\n    margin: 0 auto;\n    margin-top: 70px;\n    display: flex;\n    max-width:80%;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    position: relative;    \n}\n\n\n#hero .text p {\n    font-size: clamp(18px, 2vw, 22px);\n    line-height: 18px;\n    margin: 0 0 60px 4px;\n}\n\n#hero .text h1 {\n    font-size: clamp(1rem + 5vw, 1rem + 10vw, 7rem);\n    line-height: 68px;\n    white-space: nowrap;\n    margin-bottom: 20px;\n}\n\n#hero .text h2 {\n    font-size: clamp(1rem + 4vw, 1rem + 8vw, 7rem);\n    line-height: 1.1;\n    white-space: nowrap;\n}\n\n#hero .info .social a {\n    text-decoration: underline;\n    padding-right: 20px;\n}\n\n#hero .info button {\n    border: 1px solid #52d4b9;\n    color: #52d4b9;\n    background: none;\n    padding: 20px;\n    font-size: 18px;\n    margin-top: 40px;\n    margin-bottom: 40px;\n}\n\n#hero .image {\n    display: flex;\n    margin-left: 30px;\n    align-self: flex-start;\n}\n#hero .image img {\n    max-width: 100%;\n    border-radius: 50%;  \n}\n\n/* Marquee */\n\n.marquee {\n    position: relative;\n    margin-top: 50px;\n    padding: 20px;\n    overflow: hidden;\n    width: 40rem;\n    display: flex;\n    border-bottom: #8892b0;\n}\n\n.marquee-content {\n    display: flex;\n    list-style-type: none;\n    gap: 10rem;\n    animation: 30s scrolling infinite linear;  \n}\n\n.marquee:before, .marquee:after {\n    position: absolute;\n    top: 0;\n    width: 5rem;\n    height: 100%;\n    content: '';\n    z-index: 1;\n}\n\n.marquee:before {\n    left: 0;\n    background: linear-gradient(to right, #0a192f 0%, transparent 100%);\n}\n\n.marquee:after {\n    right: 0;\n    background: linear-gradient(to left, #0a192f 0%, transparent 100%);\n}\n\n\n.marquee-content li i, .marquee-2 li i {\n    font-size: 60px;\n    color:#8892b0;\n    opacity: .7;\n}\n\n@keyframes scrolling {\n    0% {transform: translateX(40rem);}\n    100% {transform: translateX(-105%);}\n}\n\n\n\n\n\n\n\n\n \n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,2DAAsD;IACtD,gBAAgB;IAChB,kBAAkB;EACpB;;AAEF;IACI,qBAAqB;IACrB,2DAAsD;IACtD,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA,0BAA0B;AAC1B;IACI,SAAS;IACT,UAAU;IACV,sBAAsB;AAC1B;AACA;IACI,kCAAkC;AACtC;;AAEA;IACI,iCAAiC;AACrC;;AAEA;IACI,qBAAqB;IACrB,iCAAiC;AACrC;;AAEA,oBAAoB;AACpB;IACI,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,cAAc;AAClB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA,YAAY;;AAEZ;IACI,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,qCAAqC;IACrC,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;AAEvB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,qBAAqB;IACrB,mBAAmB;;AAEvB;;AAEA;IACI,cAAc;IACd,iBAAiB;AACrB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,0BAA0B;AAC9B;;AAEA,SAAS;;;AAGT;IACI,eAAe;IACf,cAAc;IACd,gBAAgB;IAChB,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,gBAAgB;IAChB,kBAAkB;AACtB;;;AAGA;IACI,iCAAiC;IACjC,iBAAiB;IACjB,oBAAoB;AACxB;;AAEA;IACI,+CAA+C;IAC/C,iBAAiB;IACjB,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,8CAA8C;IAC9C,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,0BAA0B;IAC1B,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,cAAc;IACd,gBAAgB;IAChB,aAAa;IACb,eAAe;IACf,gBAAgB;IAChB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,iBAAiB;IACjB,sBAAsB;AAC1B;AACA;IACI,eAAe;IACf,kBAAkB;AACtB;;AAEA,YAAY;;AAEZ;IACI,kBAAkB;IAClB,gBAAgB;IAChB,aAAa;IACb,gBAAgB;IAChB,YAAY;IACZ,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,qBAAqB;IACrB,UAAU;IACV,wCAAwC;AAC5C;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,WAAW;IACX,YAAY;IACZ,WAAW;IACX,UAAU;AACd;;AAEA;IACI,OAAO;IACP,mEAAmE;AACvE;;AAEA;IACI,QAAQ;IACR,kEAAkE;AACtE;;;AAGA;IACI,eAAe;IACf,aAAa;IACb,WAAW;AACf;;AAEA;IACI,IAAI,4BAA4B,CAAC;IACjC,MAAM,4BAA4B,CAAC;AACvC",sourcesContent:["@font-face {\n    font-family: 'calibre';\n    src: url('./assets/CalibreRegular.otf') format('woff');\n    font-weight: 600;\n    font-style: normal;\n  }\n\n@font-face {\n    font-family: 'sfmono';\n    src: url('./assets/SFMonoRegular.woff') format('woff');\n    font-weight: 400;\n    font-style: normal;\n}\n\n/* Default Configuration */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\nh1, h2, h3 {\n    font-family: 'calibre', sans-serif;\n}\n\np, li {\n    font-family: 'sfmono', sans-serif;\n}\n\na {\n    text-decoration: none;\n    font-family: 'sfmono', sans-serif;\n}\n\n/* Utility Classes */\n.pointer:hover {\n    cursor: pointer;\n}\n\n.bg-dark {\n    background-color: #0a192f;\n}\n\n.highlight {\n    color: #52d4b9;\n}\n\n.feature-text, a {\n    color: #ccd6f6;\n}\n\n.sub-text {\n    color: #8892b0;\n}\n\n.p1 {\n    padding: 10px;\n}\n\n.p2 {\n    padding: 20px;\n}\n\n/* Nav CSS */\n\nnav {\n    padding: 20px 50px;\n}\n\n.nav-grid-container {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    background: #0b1930;\n}\n\n.logo {\n    display: flex;\n    justify-content: start;\n    align-items: center;\n    \n}\n\n.logo img {\n    height: 50px;\n}\n\n.nav-links {\n    display: flex;\n    justify-content: flex-end;\n}\n\n.nav-links ul {\n    display: flex;\n    list-style-type: none;    \n    align-items: center;\n    \n}\n\n.nav-links ul li span {\n    color: #52d4b9;\n    margin-right: 5px;\n}\n\n.nav-links ul li {\n    display: flex;\n    padding-right: 40px;\n}\n\n.nav-links ul li:hover {\n    text-decoration: underline;\n}\n\n/* Body */\n\n\n#hero {\n    padding: 0 20px;\n    margin: 0 auto;\n    margin-top: 70px;\n    display: flex;\n    max-width:80%;\n    justify-content: center;\n    align-items: center;\n    overflow: hidden;\n    position: relative;    \n}\n\n\n#hero .text p {\n    font-size: clamp(18px, 2vw, 22px);\n    line-height: 18px;\n    margin: 0 0 60px 4px;\n}\n\n#hero .text h1 {\n    font-size: clamp(1rem + 5vw, 1rem + 10vw, 7rem);\n    line-height: 68px;\n    white-space: nowrap;\n    margin-bottom: 20px;\n}\n\n#hero .text h2 {\n    font-size: clamp(1rem + 4vw, 1rem + 8vw, 7rem);\n    line-height: 1.1;\n    white-space: nowrap;\n}\n\n#hero .info .social a {\n    text-decoration: underline;\n    padding-right: 20px;\n}\n\n#hero .info button {\n    border: 1px solid #52d4b9;\n    color: #52d4b9;\n    background: none;\n    padding: 20px;\n    font-size: 18px;\n    margin-top: 40px;\n    margin-bottom: 40px;\n}\n\n#hero .image {\n    display: flex;\n    margin-left: 30px;\n    align-self: flex-start;\n}\n#hero .image img {\n    max-width: 100%;\n    border-radius: 50%;  \n}\n\n/* Marquee */\n\n.marquee {\n    position: relative;\n    margin-top: 50px;\n    padding: 20px;\n    overflow: hidden;\n    width: 40rem;\n    display: flex;\n    border-bottom: #8892b0;\n}\n\n.marquee-content {\n    display: flex;\n    list-style-type: none;\n    gap: 10rem;\n    animation: 30s scrolling infinite linear;  \n}\n\n.marquee:before, .marquee:after {\n    position: absolute;\n    top: 0;\n    width: 5rem;\n    height: 100%;\n    content: '';\n    z-index: 1;\n}\n\n.marquee:before {\n    left: 0;\n    background: linear-gradient(to right, #0a192f 0%, transparent 100%);\n}\n\n.marquee:after {\n    right: 0;\n    background: linear-gradient(to left, #0a192f 0%, transparent 100%);\n}\n\n\n.marquee-content li i, .marquee-2 li i {\n    font-size: 60px;\n    color:#8892b0;\n    opacity: .7;\n}\n\n@keyframes scrolling {\n    0% {transform: translateX(40rem);}\n    100% {transform: translateX(-105%);}\n}\n\n\n\n\n\n\n\n\n \n\n"],sourceRoot:""}]);const m=p},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",A=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),A&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),A&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,A,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(A)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(o[s]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);A&&o[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),e.push(c))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),a="/*# ".concat(r," */"),o=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(o).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,A=0;A<e.length;A++)if(e[A].identifier===n){t=A;break}return t}function A(n,A){for(var a={},o=[],i=0;i<n.length;i++){var s=n[i],l=A.base?s[0]+A.base:s[0],c=a[l]||0,p="".concat(l," ").concat(c);a[l]=c+1;var d=t(p),f={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(f);else{var m=r(f,A);A.byIndex=i,e.splice(i,0,{identifier:p,updater:m,references:1})}o.push(p)}return o}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=A(n=n||[],r=r||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var i=t(a[o]);e[i].references--}for(var s=A(n,r),l=0;l<a.length;l++){var c=t(a[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var A=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!A)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");A.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var A="";t.supports&&(A+="@supports (".concat(t.supports,") {")),t.media&&(A+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(A+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),A+=t.css,r&&(A+="}"),t.media&&(A+="}"),t.supports&&(A+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(A+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(A,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},866:(n,e,t)=>{n.exports=t.p+"CalibreRegular.otf"},493:(n,e,t)=>{n.exports=t.p+"SFMonoRegular.woff"}},e={};function t(A){var r=e[A];if(void 0!==r)return r.exports;var a=e[A]={id:A,exports:{}};return n[A](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var A in e)t.o(e,A)&&!t.o(n,A)&&Object.defineProperty(n,A,{enumerable:!0,get:e[A]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var A=e.getElementsByTagName("script");A.length&&(n=A[A.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),A=t(795),r=t.n(A),a=t(569),o=t.n(a),i=t(565),s=t.n(i),l=t(216),c=t.n(l),p=t(589),d=t.n(p),f=t(426),m={};m.styleTagTransform=d(),m.setAttributes=s(),m.insert=o().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=c(),e()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;var C=t(360),u={};u.styleTagTransform=d(),u.setAttributes=s(),u.insert=o().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=c(),e()(C.Z,u),C.Z&&C.Z.locals&&C.Z.locals;const g=t.p+"sun.svg",I=t.p+"WWWLogo.svg",B=t.p+"me.jpg";console.log(g);var h=new Image,x=new Image,v=new Image;h.src=g,console.log(h),document.querySelector(".nav-links").appendChild(h),h.classList.add("pointer"),x.src=I,document.querySelector(".logo").appendChild(x),v.src=B,document.querySelector(".image").appendChild(v)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,